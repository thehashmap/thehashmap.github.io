"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-activity-calendar";
exports.ids = ["vendor-chunks/react-activity-calendar"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-activity-calendar/build/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-activity-calendar/build/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar chroma = __webpack_require__(/*! chroma-js */ \"(ssr)/./node_modules/chroma-js/chroma.js\");\nvar dateFns = __webpack_require__(/*! date-fns */ \"(ssr)/./node_modules/date-fns/index.js\");\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }\n\nvar chroma__default = /*#__PURE__*/_interopDefault(chroma);\nvar React__default = /*#__PURE__*/_interopDefault(React);\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nconst NAMESPACE = 'react-activity-calendar';\nconst LEVEL_COUNT = 5;\nconst MIN_DISTANCE_MONTH_LABELS = 2;\nconst DEFAULT_MONTH_LABELS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst DEFAULT_WEEKDAY_LABELS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst DEFAULT_LABELS = {\n  months: DEFAULT_MONTH_LABELS,\n  weekdays: DEFAULT_WEEKDAY_LABELS,\n  totalCount: '{{count}} activities in {{year}}',\n  legend: {\n    less: 'Less',\n    more: 'More'\n  }\n};\n\nfunction useColorScheme() {\n  const [colorScheme, setColorScheme] = React.useState('light');\n  const onChange = event => setColorScheme(event.matches ? 'dark' : 'light');\n  React.useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setColorScheme(mediaQuery.matches ? 'dark' : 'light');\n    mediaQuery.addEventListener('change', onChange);\n    return () => {\n      mediaQuery.removeEventListener('change', onChange);\n    };\n  }, []);\n  return colorScheme;\n}\n\nconst query = '(prefers-reduced-motion: reduce)';\nfunction usePrefersReducedMotion() {\n  const [prefersReducedMotion, setPrefersReducedMotion] = React.useState(true);\n  React.useEffect(() => {\n    const mediaQuery = window.matchMedia(query);\n    setPrefersReducedMotion(mediaQuery.matches);\n    const onChange = event => {\n      setPrefersReducedMotion(event.matches);\n    };\n    mediaQuery.addEventListener('change', onChange);\n    return () => {\n      mediaQuery.removeEventListener('change', onChange);\n    };\n  }, []);\n  return prefersReducedMotion;\n}\n\nfunction groupByWeeks(days) {\n  let weekStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (days.length === 0) {\n    return [];\n  }\n  const normalizedDays = fillHoles(days);\n\n  // Determine the first date of the calendar. If the first date is not the\n  // set start weekday, the selected weekday one week earlier is used.\n  const firstDate = dateFns.parseISO(normalizedDays[0].date);\n  const firstCalendarDate = dateFns.getDay(firstDate) === weekStart ? firstDate : dateFns.subWeeks(dateFns.nextDay(firstDate, weekStart), 1);\n\n  // To correctly group activities by week, it is necessary to left pad the\n  // list because the first date might not be set start weekday.\n  const paddedDays = [...Array(dateFns.differenceInCalendarDays(firstDate, firstCalendarDate)).fill(undefined), ...normalizedDays];\n  return Array(Math.ceil(paddedDays.length / 7)).fill(undefined).map((_, calendarWeek) => paddedDays.slice(calendarWeek * 7, calendarWeek * 7 + 7));\n}\n\n/**\n * The calendar expects a continuous sequence of days, so fill gaps with empty\n * activity data.\n */\nfunction fillHoles(days) {\n  const daysMap = days.reduce((map, day) => {\n    map.set(day.date, day);\n    return map;\n  }, new Map());\n  return dateFns.eachDayOfInterval({\n    start: dateFns.parseISO(days[0].date),\n    end: dateFns.parseISO(days[days.length - 1].date)\n  }).map(day => {\n    const date = dateFns.formatISO(day, {\n      representation: 'date'\n    });\n    if (daysMap.has(date)) {\n      return daysMap.get(date);\n    }\n    return {\n      date,\n      count: 0,\n      level: 0\n    };\n  });\n}\nfunction getMonthLabels(weeks) {\n  let monthNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_MONTH_LABELS;\n  return weeks.reduce((labels, week, index) => {\n    const firstWeekDay = week.find(day => day !== undefined);\n    if (!firstWeekDay) {\n      throw new Error(`Unexpected error: Week is empty: [${week}].`);\n    }\n    const month = monthNames[dateFns.getMonth(dateFns.parseISO(firstWeekDay.date))];\n    const prev = labels[labels.length - 1];\n    if (index === 0 || prev.text !== month) {\n      return [...labels, {\n        x: index,\n        y: 0,\n        text: month\n      }];\n    }\n    return labels;\n  }, []).filter((label, index, labels) => {\n    if (index === 0) {\n      return labels[1] && labels[1].x - label.x > MIN_DISTANCE_MONTH_LABELS;\n    }\n    return true;\n  });\n}\nfunction getClassName(name, styles) {\n  if (styles) {\n    return `${NAMESPACE}__${name} ${styles}`;\n  }\n  return `${NAMESPACE}__${name}`;\n}\nfunction generateEmptyData() {\n  const year = new Date().getFullYear();\n  const days = dateFns.eachDayOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31)\n  });\n  return days.map(date => ({\n    date: dateFns.formatISO(date, {\n      representation: 'date'\n    }),\n    count: 0,\n    level: 0\n  }));\n}\n\nconst defaultTheme = createTheme({\n  light: ['hsl(0, 0%, 92%)', 'hsl(0, 0%, 26%)'],\n  dark: ['hsl(0, 0%, 20%)', 'hsl(0, 0%, 92%)']\n});\nfunction createTheme(theme) {\n  if (theme) {\n    var _theme$light, _theme$dark;\n    validateTheme(theme);\n    theme.light = (_theme$light = theme.light) !== null && _theme$light !== void 0 ? _theme$light : defaultTheme.light;\n    theme.dark = (_theme$dark = theme.dark) !== null && _theme$dark !== void 0 ? _theme$dark : defaultTheme.dark;\n    return {\n      light: isColorScale(theme.light) ? theme.light : createColorScale(theme.light),\n      dark: isColorScale(theme.dark) ? theme.dark : createColorScale(theme.dark)\n    };\n  }\n  return defaultTheme;\n}\nfunction validateTheme(theme) {\n  if (typeof theme !== 'object' || theme.light === undefined && theme.dark === undefined) {\n    throw new Error(`The theme object must contain at least one of the fields \"light\" and \"dark\" with exactly 2 or ${LEVEL_COUNT} colors respectively.`);\n  }\n  if (theme.light) {\n    const {\n      length\n    } = theme.light;\n    if (length !== 2 && length !== LEVEL_COUNT) {\n      throw new Error(`theme.light must contain exactly 2 or ${LEVEL_COUNT} colors, ${length} passed.`);\n    }\n  }\n  if (theme.dark) {\n    const {\n      length\n    } = theme.dark;\n    if (length !== 2 && length !== LEVEL_COUNT) {\n      throw new Error(`theme.dark must contain exactly 2 or ${LEVEL_COUNT} colors, ${length} passed.`);\n    }\n  }\n}\nfunction isColorScale(colors) {\n  const invalidColor = colors.find(color => !chroma__default.default.valid(color));\n  if (invalidColor) {\n    throw new Error(`Invalid color \"${invalidColor}\" passed. All CSS color formats are accepted.`);\n  }\n  return colors.length === LEVEL_COUNT;\n}\nfunction createColorScale(colors) {\n  return chroma__default.default.scale(colors).mode('lch').colors(LEVEL_COUNT);\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".styles-module_container__Zq3Ln rect {\\n  stroke: rgba(0, 0, 0, 0.08);\\n  stroke-width: 1px;\\n  shape-rendering: geometricPrecision;\\n}\\n\\n@media (prefers-color-scheme: dark) {\\n  .styles-module_container__Zq3Ln rect {\\n    stroke: rgba(255, 255, 255, 0.04);\\n  }\\n}\\n\\n.styles-module_calendar__-Ozc6 {\\n  display: block;\\n  max-width: 100%;\\n  height: auto;\\n  overflow: visible;\\n}\\n\\n.styles-module_calendar__-Ozc6 text {\\n  fill: currentColor;\\n}\\n\\n.styles-module_calendar__-Ozc6 [data-level='0'] {\\n  fill: var(--react-activity-calendar-level-0);\\n}\\n\\n.styles-module_calendar__-Ozc6 [data-level='1'] {\\n  fill: var(--react-activity-calendar-level-1);\\n}\\n\\n.styles-module_calendar__-Ozc6 [data-level='2'] {\\n  fill: var(--react-activity-calendar-level-2);\\n}\\n\\n.styles-module_calendar__-Ozc6 [data-level='3'] {\\n  fill: var(--react-activity-calendar-level-3);\\n}\\n\\n.styles-module_calendar__-Ozc6 [data-level='4'] {\\n  fill: var(--react-activity-calendar-level-4);\\n}\\n\\n.styles-module_footer__IMos1 {\\n  display: flex;\\n}\\n\\n.styles-module_legendColors__oZihX {\\n  margin-left: auto;\\n  display: flex;\\n  align-items: center;\\n  gap: 0.2em;\\n}\\n\\n@keyframes styles-module_loadingAnimation__Vul35 {\\n  0% {\\n    fill: var(--react-activity-calendar-loading);\\n  }\\n  50% {\\n    fill: var(--react-activity-calendar-loading-active);\\n  }\\n  100% {\\n    fill: var(--react-activity-calendar-loading);\\n  }\\n}\\n\";\nvar styles = {\"container\":\"styles-module_container__Zq3Ln\",\"calendar\":\"styles-module_calendar__-Ozc6\",\"footer\":\"styles-module_footer__IMos1\",\"legendColors\":\"styles-module_legendColors__oZihX\",\"loadingAnimation\":\"styles-module_loadingAnimation__Vul35\"};\nstyleInject(css_248z);\n\nconst ActivityCalendar = _ref => {\n  let {\n    data,\n    blockMargin = 4,\n    blockRadius = 2,\n    blockSize = 12,\n    colorScheme = undefined,\n    eventHandlers = {},\n    fontSize = 14,\n    hideColorLegend = false,\n    hideMonthLabels = false,\n    hideTotalCount = false,\n    labels: labelsProp = undefined,\n    loading = false,\n    renderBlock = undefined,\n    showWeekdayLabels = false,\n    style = {},\n    theme: themeProp = undefined,\n    totalCount: totalCountProp = undefined,\n    weekStart = 0 // Sunday\n  } = _ref;\n  const theme = createTheme(themeProp);\n  const systemColorScheme = useColorScheme();\n  const colorScale = theme[colorScheme !== null && colorScheme !== void 0 ? colorScheme : systemColorScheme];\n  const useAnimation = !usePrefersReducedMotion();\n  if (loading) {\n    data = generateEmptyData();\n  }\n  if (data.length === 0) {\n    return null;\n  }\n  const year = dateFns.getYear(dateFns.parseISO(data[0]?.date));\n  const weeks = groupByWeeks(data, weekStart);\n  const labels = Object.assign({}, DEFAULT_LABELS, labelsProp);\n  const textHeight = hideMonthLabels ? 0 : fontSize + 2 * blockMargin;\n  function getDimensions() {\n    return {\n      width: weeks.length * (blockSize + blockMargin) - blockMargin,\n      height: textHeight + (blockSize + blockMargin) * 7 - blockMargin\n    };\n  }\n  function getEventHandlers(activity) {\n    return Object.keys(eventHandlers).reduce((handlers, key) => ({\n      ...handlers,\n      [key]: event => eventHandlers[key]?.(event)(activity)\n    }), {});\n  }\n  function renderCalendar() {\n    return weeks.map((week, weekIndex) => week.map((activity, dayIndex) => {\n      if (!activity) {\n        return null;\n      }\n      const style = loading && useAnimation ? {\n        animation: `${styles.loadingAnimation} 1.75s ease-in-out infinite`,\n        animationDelay: `${weekIndex * 20 + dayIndex * 20}ms`\n      } : undefined;\n      const block = /*#__PURE__*/React__default.default.createElement(\"rect\", _extends({}, getEventHandlers(activity), {\n        x: 0,\n        y: textHeight + (blockSize + blockMargin) * dayIndex,\n        width: blockSize,\n        height: blockSize,\n        rx: blockRadius,\n        ry: blockRadius,\n        \"data-date\": activity.date,\n        \"data-level\": activity.level,\n        style: style\n      }));\n      return /*#__PURE__*/React__default.default.createElement(React.Fragment, {\n        key: activity.date\n      }, renderBlock ? renderBlock(block, activity) : block);\n    })).map((week, x) => /*#__PURE__*/React__default.default.createElement(\"g\", {\n      key: x,\n      transform: `translate(${(blockSize + blockMargin) * x}, 0)`\n    }, week));\n  }\n  function renderFooter() {\n    var _labels$legend$less, _labels$legend$more;\n    if (hideTotalCount && hideColorLegend) {\n      return null;\n    }\n    const totalCount = typeof totalCountProp === 'number' ? totalCountProp : data.reduce((sum, activity) => sum + activity.count, 0);\n    return /*#__PURE__*/React__default.default.createElement(\"footer\", {\n      className: getClassName('footer', styles.footer),\n      style: {\n        marginTop: 2 * blockMargin,\n        fontSize\n      }\n    }, loading && /*#__PURE__*/React__default.default.createElement(\"div\", null, \"\\xA0\"), !loading && !hideTotalCount && /*#__PURE__*/React__default.default.createElement(\"div\", {\n      className: getClassName('count')\n    }, labels.totalCount ? labels.totalCount.replace('{{count}}', String(totalCount)).replace('{{year}}', String(year)) : `${totalCount} activities in ${year}`), !loading && !hideColorLegend && /*#__PURE__*/React__default.default.createElement(\"div\", {\n      className: getClassName('legend-colors', styles.legendColors)\n    }, /*#__PURE__*/React__default.default.createElement(\"span\", {\n      style: {\n        marginRight: '0.4em'\n      }\n    }, (_labels$legend$less = labels?.legend?.less) !== null && _labels$legend$less !== void 0 ? _labels$legend$less : 'Less'), Array(LEVEL_COUNT).fill(undefined).map((_, level) => /*#__PURE__*/React__default.default.createElement(\"svg\", {\n      width: blockSize,\n      height: blockSize,\n      key: level\n    }, /*#__PURE__*/React__default.default.createElement(\"rect\", {\n      width: blockSize,\n      height: blockSize,\n      fill: colorScale[level],\n      rx: blockRadius,\n      ry: blockRadius\n    }))), /*#__PURE__*/React__default.default.createElement(\"span\", {\n      style: {\n        marginLeft: '0.4em'\n      }\n    }, (_labels$legend$more = labels?.legend?.more) !== null && _labels$legend$more !== void 0 ? _labels$legend$more : 'More')));\n  }\n  function renderLabels() {\n    const style = {\n      fontSize\n    };\n    if (!showWeekdayLabels && hideMonthLabels) {\n      return null;\n    }\n    return /*#__PURE__*/React__default.default.createElement(React__default.default.Fragment, null, showWeekdayLabels && /*#__PURE__*/React__default.default.createElement(\"g\", {\n      className: getClassName('legend-weekday'),\n      style: style\n    }, weeks[0].map((day, index) => {\n      if (index % 2 === 0) {\n        return null;\n      }\n      const dayIndex = (index + weekStart) % 7;\n      return /*#__PURE__*/React__default.default.createElement(\"text\", {\n        x: -2 * blockMargin,\n        y: textHeight + (fontSize / 2 + blockMargin) + (blockSize + blockMargin) * index,\n        textAnchor: \"end\",\n        key: index\n      }, labels.weekdays ? labels.weekdays[dayIndex] : DEFAULT_WEEKDAY_LABELS[dayIndex]);\n    })), !hideMonthLabels && /*#__PURE__*/React__default.default.createElement(\"g\", {\n      className: getClassName('legend-month'),\n      style: style\n    }, getMonthLabels(weeks, labels.months).map((_ref2, index, labels) => {\n      let {\n        text,\n        x\n      } = _ref2;\n      // Skip the first month label if there's not enough space to the next one\n      if (index === 0 && labels[1] && labels[1].x - x <= MIN_DISTANCE_MONTH_LABELS) {\n        return null;\n      }\n      return /*#__PURE__*/React__default.default.createElement(\"text\", {\n        x: (blockSize + blockMargin) * x,\n        dominantBaseline: \"hanging\",\n        key: x\n      }, text);\n    })));\n  }\n  const {\n    width,\n    height\n  } = getDimensions();\n  const calendarStyles = {\n    maxWidth: width,\n    [`--${NAMESPACE}-level-0`]: colorScale[0],\n    [`--${NAMESPACE}-level-1`]: colorScale[1],\n    [`--${NAMESPACE}-level-2`]: colorScale[2],\n    [`--${NAMESPACE}-level-3`]: colorScale[3],\n    [`--${NAMESPACE}-level-4`]: colorScale[4],\n    ...(useAnimation && {\n      [`--${NAMESPACE}-loading`]: colorScale[0],\n      [`--${NAMESPACE}-loading-active`]: colorScheme === 'light' ? chroma__default.default(colorScale[0]).darken(0.3).hex() : chroma__default.default(colorScale[0]).brighten(0.25).hex()\n    })\n  };\n  return /*#__PURE__*/React__default.default.createElement(\"article\", {\n    className: `${NAMESPACE} ${styles.container}`,\n    style: {\n      ...style,\n      ...calendarStyles\n    }\n  }, /*#__PURE__*/React__default.default.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: `0 0 ${width} ${height}`,\n    className: getClassName('calendar', styles.calendar)\n  }, !loading && renderLabels(), renderCalendar()), renderFooter());\n};\nconst Skeleton = props => /*#__PURE__*/React__default.default.createElement(ActivityCalendar, _extends({\n  data: []\n}, props));\n\nexports.Skeleton = Skeleton;\nexports[\"default\"] = ActivityCalendar;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtYWN0aXZpdHktY2FsZW5kYXIvYnVpbGQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCxhQUFhLG1CQUFPLENBQUMsMkRBQVc7QUFDaEMsY0FBYyxtQkFBTyxDQUFDLHdEQUFVO0FBQ2hDLFlBQVksbUJBQU8sQ0FBQyx3R0FBTzs7QUFFM0IsK0JBQStCLGlDQUFpQzs7QUFFaEU7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUSxnQkFBZ0IsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELEtBQUs7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGNBQWMsVUFBVSxJQUFJLE1BQU0sRUFBRSxPQUFPO0FBQzNDO0FBQ0EsWUFBWSxVQUFVLElBQUksS0FBSztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFIQUFxSCxhQUFhO0FBQ2xJO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsK0RBQStELGFBQWEsVUFBVSxRQUFRO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSw4REFBOEQsYUFBYSxVQUFVLFFBQVE7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGFBQWE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxpREFBaUQ7O0FBRWpEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBLHNEQUFzRCxnQ0FBZ0Msc0JBQXNCLHdDQUF3QyxHQUFHLHlDQUF5QywwQ0FBMEMsd0NBQXdDLEtBQUssR0FBRyxvQ0FBb0MsbUJBQW1CLG9CQUFvQixpQkFBaUIsc0JBQXNCLEdBQUcseUNBQXlDLHVCQUF1QixHQUFHLHFEQUFxRCxpREFBaUQsR0FBRyxxREFBcUQsaURBQWlELEdBQUcscURBQXFELGlEQUFpRCxHQUFHLHFEQUFxRCxpREFBaUQsR0FBRyxxREFBcUQsaURBQWlELEdBQUcsa0NBQWtDLGtCQUFrQixHQUFHLHdDQUF3QyxzQkFBc0Isa0JBQWtCLHdCQUF3QixlQUFlLEdBQUcsc0RBQXNELFFBQVEsbURBQW1ELEtBQUssU0FBUywwREFBMEQsS0FBSyxVQUFVLG1EQUFtRCxLQUFLLEdBQUc7QUFDbjVDLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssS0FBSztBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlCQUF5QjtBQUMvQywyQkFBMkIsK0JBQStCO0FBQzFELFFBQVE7QUFDUix5RkFBeUY7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsOEJBQThCLDhCQUE4QjtBQUM1RCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLLG1EQUFtRCxPQUFPLGtDQUFrQyxNQUFNLHNCQUFzQixZQUFZLGdCQUFnQixLQUFLO0FBQzlKO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxVQUFVLFVBQVU7QUFDcEIsVUFBVSxVQUFVO0FBQ3BCLFVBQVUsVUFBVTtBQUNwQixVQUFVLFVBQVU7QUFDcEIsVUFBVSxVQUFVO0FBQ3BCO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCLFlBQVksVUFBVTtBQUN0QixLQUFLO0FBQ0w7QUFDQTtBQUNBLGtCQUFrQixXQUFXLEVBQUUsaUJBQWlCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTyxFQUFFLE9BQU87QUFDcEM7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCxnQkFBZ0I7QUFDaEIsa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZWhhc2htYXAuZ2l0aHViLmlvLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWFjdGl2aXR5LWNhbGVuZGFyL2J1aWxkL2luZGV4LmpzPzkyY2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuXG52YXIgY2hyb21hID0gcmVxdWlyZSgnY2hyb21hLWpzJyk7XG52YXIgZGF0ZUZucyA9IHJlcXVpcmUoJ2RhdGUtZm5zJyk7XG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcERlZmF1bHQgKGUpIHsgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHsgZGVmYXVsdDogZSB9OyB9XG5cbnZhciBjaHJvbWFfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0KGNocm9tYSk7XG52YXIgUmVhY3RfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0KFJlYWN0KTtcblxuZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmNvbnN0IE5BTUVTUEFDRSA9ICdyZWFjdC1hY3Rpdml0eS1jYWxlbmRhcic7XG5jb25zdCBMRVZFTF9DT1VOVCA9IDU7XG5jb25zdCBNSU5fRElTVEFOQ0VfTU9OVEhfTEFCRUxTID0gMjtcbmNvbnN0IERFRkFVTFRfTU9OVEhfTEFCRUxTID0gWydKYW4nLCAnRmViJywgJ01hcicsICdBcHInLCAnTWF5JywgJ0p1bicsICdKdWwnLCAnQXVnJywgJ1NlcCcsICdPY3QnLCAnTm92JywgJ0RlYyddO1xuY29uc3QgREVGQVVMVF9XRUVLREFZX0xBQkVMUyA9IFsnU3VuJywgJ01vbicsICdUdWUnLCAnV2VkJywgJ1RodScsICdGcmknLCAnU2F0J107XG5jb25zdCBERUZBVUxUX0xBQkVMUyA9IHtcbiAgbW9udGhzOiBERUZBVUxUX01PTlRIX0xBQkVMUyxcbiAgd2Vla2RheXM6IERFRkFVTFRfV0VFS0RBWV9MQUJFTFMsXG4gIHRvdGFsQ291bnQ6ICd7e2NvdW50fX0gYWN0aXZpdGllcyBpbiB7e3llYXJ9fScsXG4gIGxlZ2VuZDoge1xuICAgIGxlc3M6ICdMZXNzJyxcbiAgICBtb3JlOiAnTW9yZSdcbiAgfVxufTtcblxuZnVuY3Rpb24gdXNlQ29sb3JTY2hlbWUoKSB7XG4gIGNvbnN0IFtjb2xvclNjaGVtZSwgc2V0Q29sb3JTY2hlbWVdID0gUmVhY3QudXNlU3RhdGUoJ2xpZ2h0Jyk7XG4gIGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4gc2V0Q29sb3JTY2hlbWUoZXZlbnQubWF0Y2hlcyA/ICdkYXJrJyA6ICdsaWdodCcpO1xuICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IG1lZGlhUXVlcnkgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpO1xuICAgIHNldENvbG9yU2NoZW1lKG1lZGlhUXVlcnkubWF0Y2hlcyA/ICdkYXJrJyA6ICdsaWdodCcpO1xuICAgIG1lZGlhUXVlcnkuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgb25DaGFuZ2UpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBtZWRpYVF1ZXJ5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIG9uQ2hhbmdlKTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHJldHVybiBjb2xvclNjaGVtZTtcbn1cblxuY29uc3QgcXVlcnkgPSAnKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246IHJlZHVjZSknO1xuZnVuY3Rpb24gdXNlUHJlZmVyc1JlZHVjZWRNb3Rpb24oKSB7XG4gIGNvbnN0IFtwcmVmZXJzUmVkdWNlZE1vdGlvbiwgc2V0UHJlZmVyc1JlZHVjZWRNb3Rpb25dID0gUmVhY3QudXNlU3RhdGUodHJ1ZSk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgbWVkaWFRdWVyeSA9IHdpbmRvdy5tYXRjaE1lZGlhKHF1ZXJ5KTtcbiAgICBzZXRQcmVmZXJzUmVkdWNlZE1vdGlvbihtZWRpYVF1ZXJ5Lm1hdGNoZXMpO1xuICAgIGNvbnN0IG9uQ2hhbmdlID0gZXZlbnQgPT4ge1xuICAgICAgc2V0UHJlZmVyc1JlZHVjZWRNb3Rpb24oZXZlbnQubWF0Y2hlcyk7XG4gICAgfTtcbiAgICBtZWRpYVF1ZXJ5LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIG9uQ2hhbmdlKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgbWVkaWFRdWVyeS5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkNoYW5nZSk7XG4gICAgfTtcbiAgfSwgW10pO1xuICByZXR1cm4gcHJlZmVyc1JlZHVjZWRNb3Rpb247XG59XG5cbmZ1bmN0aW9uIGdyb3VwQnlXZWVrcyhkYXlzKSB7XG4gIGxldCB3ZWVrU3RhcnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDA7XG4gIGlmIChkYXlzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBjb25zdCBub3JtYWxpemVkRGF5cyA9IGZpbGxIb2xlcyhkYXlzKTtcblxuICAvLyBEZXRlcm1pbmUgdGhlIGZpcnN0IGRhdGUgb2YgdGhlIGNhbGVuZGFyLiBJZiB0aGUgZmlyc3QgZGF0ZSBpcyBub3QgdGhlXG4gIC8vIHNldCBzdGFydCB3ZWVrZGF5LCB0aGUgc2VsZWN0ZWQgd2Vla2RheSBvbmUgd2VlayBlYXJsaWVyIGlzIHVzZWQuXG4gIGNvbnN0IGZpcnN0RGF0ZSA9IGRhdGVGbnMucGFyc2VJU08obm9ybWFsaXplZERheXNbMF0uZGF0ZSk7XG4gIGNvbnN0IGZpcnN0Q2FsZW5kYXJEYXRlID0gZGF0ZUZucy5nZXREYXkoZmlyc3REYXRlKSA9PT0gd2Vla1N0YXJ0ID8gZmlyc3REYXRlIDogZGF0ZUZucy5zdWJXZWVrcyhkYXRlRm5zLm5leHREYXkoZmlyc3REYXRlLCB3ZWVrU3RhcnQpLCAxKTtcblxuICAvLyBUbyBjb3JyZWN0bHkgZ3JvdXAgYWN0aXZpdGllcyBieSB3ZWVrLCBpdCBpcyBuZWNlc3NhcnkgdG8gbGVmdCBwYWQgdGhlXG4gIC8vIGxpc3QgYmVjYXVzZSB0aGUgZmlyc3QgZGF0ZSBtaWdodCBub3QgYmUgc2V0IHN0YXJ0IHdlZWtkYXkuXG4gIGNvbnN0IHBhZGRlZERheXMgPSBbLi4uQXJyYXkoZGF0ZUZucy5kaWZmZXJlbmNlSW5DYWxlbmRhckRheXMoZmlyc3REYXRlLCBmaXJzdENhbGVuZGFyRGF0ZSkpLmZpbGwodW5kZWZpbmVkKSwgLi4ubm9ybWFsaXplZERheXNdO1xuICByZXR1cm4gQXJyYXkoTWF0aC5jZWlsKHBhZGRlZERheXMubGVuZ3RoIC8gNykpLmZpbGwodW5kZWZpbmVkKS5tYXAoKF8sIGNhbGVuZGFyV2VlaykgPT4gcGFkZGVkRGF5cy5zbGljZShjYWxlbmRhcldlZWsgKiA3LCBjYWxlbmRhcldlZWsgKiA3ICsgNykpO1xufVxuXG4vKipcbiAqIFRoZSBjYWxlbmRhciBleHBlY3RzIGEgY29udGludW91cyBzZXF1ZW5jZSBvZiBkYXlzLCBzbyBmaWxsIGdhcHMgd2l0aCBlbXB0eVxuICogYWN0aXZpdHkgZGF0YS5cbiAqL1xuZnVuY3Rpb24gZmlsbEhvbGVzKGRheXMpIHtcbiAgY29uc3QgZGF5c01hcCA9IGRheXMucmVkdWNlKChtYXAsIGRheSkgPT4ge1xuICAgIG1hcC5zZXQoZGF5LmRhdGUsIGRheSk7XG4gICAgcmV0dXJuIG1hcDtcbiAgfSwgbmV3IE1hcCgpKTtcbiAgcmV0dXJuIGRhdGVGbnMuZWFjaERheU9mSW50ZXJ2YWwoe1xuICAgIHN0YXJ0OiBkYXRlRm5zLnBhcnNlSVNPKGRheXNbMF0uZGF0ZSksXG4gICAgZW5kOiBkYXRlRm5zLnBhcnNlSVNPKGRheXNbZGF5cy5sZW5ndGggLSAxXS5kYXRlKVxuICB9KS5tYXAoZGF5ID0+IHtcbiAgICBjb25zdCBkYXRlID0gZGF0ZUZucy5mb3JtYXRJU08oZGF5LCB7XG4gICAgICByZXByZXNlbnRhdGlvbjogJ2RhdGUnXG4gICAgfSk7XG4gICAgaWYgKGRheXNNYXAuaGFzKGRhdGUpKSB7XG4gICAgICByZXR1cm4gZGF5c01hcC5nZXQoZGF0ZSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICBkYXRlLFxuICAgICAgY291bnQ6IDAsXG4gICAgICBsZXZlbDogMFxuICAgIH07XG4gIH0pO1xufVxuZnVuY3Rpb24gZ2V0TW9udGhMYWJlbHMod2Vla3MpIHtcbiAgbGV0IG1vbnRoTmFtZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IERFRkFVTFRfTU9OVEhfTEFCRUxTO1xuICByZXR1cm4gd2Vla3MucmVkdWNlKChsYWJlbHMsIHdlZWssIGluZGV4KSA9PiB7XG4gICAgY29uc3QgZmlyc3RXZWVrRGF5ID0gd2Vlay5maW5kKGRheSA9PiBkYXkgIT09IHVuZGVmaW5lZCk7XG4gICAgaWYgKCFmaXJzdFdlZWtEYXkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBlcnJvcjogV2VlayBpcyBlbXB0eTogWyR7d2Vla31dLmApO1xuICAgIH1cbiAgICBjb25zdCBtb250aCA9IG1vbnRoTmFtZXNbZGF0ZUZucy5nZXRNb250aChkYXRlRm5zLnBhcnNlSVNPKGZpcnN0V2Vla0RheS5kYXRlKSldO1xuICAgIGNvbnN0IHByZXYgPSBsYWJlbHNbbGFiZWxzLmxlbmd0aCAtIDFdO1xuICAgIGlmIChpbmRleCA9PT0gMCB8fCBwcmV2LnRleHQgIT09IG1vbnRoKSB7XG4gICAgICByZXR1cm4gWy4uLmxhYmVscywge1xuICAgICAgICB4OiBpbmRleCxcbiAgICAgICAgeTogMCxcbiAgICAgICAgdGV4dDogbW9udGhcbiAgICAgIH1dO1xuICAgIH1cbiAgICByZXR1cm4gbGFiZWxzO1xuICB9LCBbXSkuZmlsdGVyKChsYWJlbCwgaW5kZXgsIGxhYmVscykgPT4ge1xuICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgcmV0dXJuIGxhYmVsc1sxXSAmJiBsYWJlbHNbMV0ueCAtIGxhYmVsLnggPiBNSU5fRElTVEFOQ0VfTU9OVEhfTEFCRUxTO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSk7XG59XG5mdW5jdGlvbiBnZXRDbGFzc05hbWUobmFtZSwgc3R5bGVzKSB7XG4gIGlmIChzdHlsZXMpIHtcbiAgICByZXR1cm4gYCR7TkFNRVNQQUNFfV9fJHtuYW1lfSAke3N0eWxlc31gO1xuICB9XG4gIHJldHVybiBgJHtOQU1FU1BBQ0V9X18ke25hbWV9YDtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlRW1wdHlEYXRhKCkge1xuICBjb25zdCB5ZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpO1xuICBjb25zdCBkYXlzID0gZGF0ZUZucy5lYWNoRGF5T2ZJbnRlcnZhbCh7XG4gICAgc3RhcnQ6IG5ldyBEYXRlKHllYXIsIDAsIDEpLFxuICAgIGVuZDogbmV3IERhdGUoeWVhciwgMTEsIDMxKVxuICB9KTtcbiAgcmV0dXJuIGRheXMubWFwKGRhdGUgPT4gKHtcbiAgICBkYXRlOiBkYXRlRm5zLmZvcm1hdElTTyhkYXRlLCB7XG4gICAgICByZXByZXNlbnRhdGlvbjogJ2RhdGUnXG4gICAgfSksXG4gICAgY291bnQ6IDAsXG4gICAgbGV2ZWw6IDBcbiAgfSkpO1xufVxuXG5jb25zdCBkZWZhdWx0VGhlbWUgPSBjcmVhdGVUaGVtZSh7XG4gIGxpZ2h0OiBbJ2hzbCgwLCAwJSwgOTIlKScsICdoc2woMCwgMCUsIDI2JSknXSxcbiAgZGFyazogWydoc2woMCwgMCUsIDIwJSknLCAnaHNsKDAsIDAlLCA5MiUpJ11cbn0pO1xuZnVuY3Rpb24gY3JlYXRlVGhlbWUodGhlbWUpIHtcbiAgaWYgKHRoZW1lKSB7XG4gICAgdmFyIF90aGVtZSRsaWdodCwgX3RoZW1lJGRhcms7XG4gICAgdmFsaWRhdGVUaGVtZSh0aGVtZSk7XG4gICAgdGhlbWUubGlnaHQgPSAoX3RoZW1lJGxpZ2h0ID0gdGhlbWUubGlnaHQpICE9PSBudWxsICYmIF90aGVtZSRsaWdodCAhPT0gdm9pZCAwID8gX3RoZW1lJGxpZ2h0IDogZGVmYXVsdFRoZW1lLmxpZ2h0O1xuICAgIHRoZW1lLmRhcmsgPSAoX3RoZW1lJGRhcmsgPSB0aGVtZS5kYXJrKSAhPT0gbnVsbCAmJiBfdGhlbWUkZGFyayAhPT0gdm9pZCAwID8gX3RoZW1lJGRhcmsgOiBkZWZhdWx0VGhlbWUuZGFyaztcbiAgICByZXR1cm4ge1xuICAgICAgbGlnaHQ6IGlzQ29sb3JTY2FsZSh0aGVtZS5saWdodCkgPyB0aGVtZS5saWdodCA6IGNyZWF0ZUNvbG9yU2NhbGUodGhlbWUubGlnaHQpLFxuICAgICAgZGFyazogaXNDb2xvclNjYWxlKHRoZW1lLmRhcmspID8gdGhlbWUuZGFyayA6IGNyZWF0ZUNvbG9yU2NhbGUodGhlbWUuZGFyaylcbiAgICB9O1xuICB9XG4gIHJldHVybiBkZWZhdWx0VGhlbWU7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZVRoZW1lKHRoZW1lKSB7XG4gIGlmICh0eXBlb2YgdGhlbWUgIT09ICdvYmplY3QnIHx8IHRoZW1lLmxpZ2h0ID09PSB1bmRlZmluZWQgJiYgdGhlbWUuZGFyayA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgdGhlbWUgb2JqZWN0IG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgb2YgdGhlIGZpZWxkcyBcImxpZ2h0XCIgYW5kIFwiZGFya1wiIHdpdGggZXhhY3RseSAyIG9yICR7TEVWRUxfQ09VTlR9IGNvbG9ycyByZXNwZWN0aXZlbHkuYCk7XG4gIH1cbiAgaWYgKHRoZW1lLmxpZ2h0KSB7XG4gICAgY29uc3Qge1xuICAgICAgbGVuZ3RoXG4gICAgfSA9IHRoZW1lLmxpZ2h0O1xuICAgIGlmIChsZW5ndGggIT09IDIgJiYgbGVuZ3RoICE9PSBMRVZFTF9DT1VOVCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGB0aGVtZS5saWdodCBtdXN0IGNvbnRhaW4gZXhhY3RseSAyIG9yICR7TEVWRUxfQ09VTlR9IGNvbG9ycywgJHtsZW5ndGh9IHBhc3NlZC5gKTtcbiAgICB9XG4gIH1cbiAgaWYgKHRoZW1lLmRhcmspIHtcbiAgICBjb25zdCB7XG4gICAgICBsZW5ndGhcbiAgICB9ID0gdGhlbWUuZGFyaztcbiAgICBpZiAobGVuZ3RoICE9PSAyICYmIGxlbmd0aCAhPT0gTEVWRUxfQ09VTlQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgdGhlbWUuZGFyayBtdXN0IGNvbnRhaW4gZXhhY3RseSAyIG9yICR7TEVWRUxfQ09VTlR9IGNvbG9ycywgJHtsZW5ndGh9IHBhc3NlZC5gKTtcbiAgICB9XG4gIH1cbn1cbmZ1bmN0aW9uIGlzQ29sb3JTY2FsZShjb2xvcnMpIHtcbiAgY29uc3QgaW52YWxpZENvbG9yID0gY29sb3JzLmZpbmQoY29sb3IgPT4gIWNocm9tYV9fZGVmYXVsdC5kZWZhdWx0LnZhbGlkKGNvbG9yKSk7XG4gIGlmIChpbnZhbGlkQ29sb3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29sb3IgXCIke2ludmFsaWRDb2xvcn1cIiBwYXNzZWQuIEFsbCBDU1MgY29sb3IgZm9ybWF0cyBhcmUgYWNjZXB0ZWQuYCk7XG4gIH1cbiAgcmV0dXJuIGNvbG9ycy5sZW5ndGggPT09IExFVkVMX0NPVU5UO1xufVxuZnVuY3Rpb24gY3JlYXRlQ29sb3JTY2FsZShjb2xvcnMpIHtcbiAgcmV0dXJuIGNocm9tYV9fZGVmYXVsdC5kZWZhdWx0LnNjYWxlKGNvbG9ycykubW9kZSgnbGNoJykuY29sb3JzKExFVkVMX0NPVU5UKTtcbn1cblxuZnVuY3Rpb24gc3R5bGVJbmplY3QoY3NzLCByZWYpIHtcbiAgaWYgKCByZWYgPT09IHZvaWQgMCApIHJlZiA9IHt9O1xuICB2YXIgaW5zZXJ0QXQgPSByZWYuaW5zZXJ0QXQ7XG5cbiAgaWYgKCFjc3MgfHwgdHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykgeyByZXR1cm47IH1cblxuICB2YXIgaGVhZCA9IGRvY3VtZW50LmhlYWQgfHwgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTtcbiAgc3R5bGUudHlwZSA9ICd0ZXh0L2Nzcyc7XG5cbiAgaWYgKGluc2VydEF0ID09PSAndG9wJykge1xuICAgIGlmIChoZWFkLmZpcnN0Q2hpbGQpIHtcbiAgICAgIGhlYWQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBoZWFkLmZpcnN0Q2hpbGQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBoZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgY3NzXzI0OHogPSBcIi5zdHlsZXMtbW9kdWxlX2NvbnRhaW5lcl9fWnEzTG4gcmVjdCB7XFxuICBzdHJva2U6IHJnYmEoMCwgMCwgMCwgMC4wOCk7XFxuICBzdHJva2Utd2lkdGg6IDFweDtcXG4gIHNoYXBlLXJlbmRlcmluZzogZ2VvbWV0cmljUHJlY2lzaW9uO1xcbn1cXG5cXG5AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSB7XFxuICAuc3R5bGVzLW1vZHVsZV9jb250YWluZXJfX1pxM0xuIHJlY3Qge1xcbiAgICBzdHJva2U6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4wNCk7XFxuICB9XFxufVxcblxcbi5zdHlsZXMtbW9kdWxlX2NhbGVuZGFyX18tT3pjNiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIG1heC13aWR0aDogMTAwJTtcXG4gIGhlaWdodDogYXV0bztcXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbn1cXG5cXG4uc3R5bGVzLW1vZHVsZV9jYWxlbmRhcl9fLU96YzYgdGV4dCB7XFxuICBmaWxsOiBjdXJyZW50Q29sb3I7XFxufVxcblxcbi5zdHlsZXMtbW9kdWxlX2NhbGVuZGFyX18tT3pjNiBbZGF0YS1sZXZlbD0nMCddIHtcXG4gIGZpbGw6IHZhcigtLXJlYWN0LWFjdGl2aXR5LWNhbGVuZGFyLWxldmVsLTApO1xcbn1cXG5cXG4uc3R5bGVzLW1vZHVsZV9jYWxlbmRhcl9fLU96YzYgW2RhdGEtbGV2ZWw9JzEnXSB7XFxuICBmaWxsOiB2YXIoLS1yZWFjdC1hY3Rpdml0eS1jYWxlbmRhci1sZXZlbC0xKTtcXG59XFxuXFxuLnN0eWxlcy1tb2R1bGVfY2FsZW5kYXJfXy1PemM2IFtkYXRhLWxldmVsPScyJ10ge1xcbiAgZmlsbDogdmFyKC0tcmVhY3QtYWN0aXZpdHktY2FsZW5kYXItbGV2ZWwtMik7XFxufVxcblxcbi5zdHlsZXMtbW9kdWxlX2NhbGVuZGFyX18tT3pjNiBbZGF0YS1sZXZlbD0nMyddIHtcXG4gIGZpbGw6IHZhcigtLXJlYWN0LWFjdGl2aXR5LWNhbGVuZGFyLWxldmVsLTMpO1xcbn1cXG5cXG4uc3R5bGVzLW1vZHVsZV9jYWxlbmRhcl9fLU96YzYgW2RhdGEtbGV2ZWw9JzQnXSB7XFxuICBmaWxsOiB2YXIoLS1yZWFjdC1hY3Rpdml0eS1jYWxlbmRhci1sZXZlbC00KTtcXG59XFxuXFxuLnN0eWxlcy1tb2R1bGVfZm9vdGVyX19JTW9zMSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4uc3R5bGVzLW1vZHVsZV9sZWdlbmRDb2xvcnNfX29aaWhYIHtcXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBnYXA6IDAuMmVtO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIHN0eWxlcy1tb2R1bGVfbG9hZGluZ0FuaW1hdGlvbl9fVnVsMzUge1xcbiAgMCUge1xcbiAgICBmaWxsOiB2YXIoLS1yZWFjdC1hY3Rpdml0eS1jYWxlbmRhci1sb2FkaW5nKTtcXG4gIH1cXG4gIDUwJSB7XFxuICAgIGZpbGw6IHZhcigtLXJlYWN0LWFjdGl2aXR5LWNhbGVuZGFyLWxvYWRpbmctYWN0aXZlKTtcXG4gIH1cXG4gIDEwMCUge1xcbiAgICBmaWxsOiB2YXIoLS1yZWFjdC1hY3Rpdml0eS1jYWxlbmRhci1sb2FkaW5nKTtcXG4gIH1cXG59XFxuXCI7XG52YXIgc3R5bGVzID0ge1wiY29udGFpbmVyXCI6XCJzdHlsZXMtbW9kdWxlX2NvbnRhaW5lcl9fWnEzTG5cIixcImNhbGVuZGFyXCI6XCJzdHlsZXMtbW9kdWxlX2NhbGVuZGFyX18tT3pjNlwiLFwiZm9vdGVyXCI6XCJzdHlsZXMtbW9kdWxlX2Zvb3Rlcl9fSU1vczFcIixcImxlZ2VuZENvbG9yc1wiOlwic3R5bGVzLW1vZHVsZV9sZWdlbmRDb2xvcnNfX29aaWhYXCIsXCJsb2FkaW5nQW5pbWF0aW9uXCI6XCJzdHlsZXMtbW9kdWxlX2xvYWRpbmdBbmltYXRpb25fX1Z1bDM1XCJ9O1xuc3R5bGVJbmplY3QoY3NzXzI0OHopO1xuXG5jb25zdCBBY3Rpdml0eUNhbGVuZGFyID0gX3JlZiA9PiB7XG4gIGxldCB7XG4gICAgZGF0YSxcbiAgICBibG9ja01hcmdpbiA9IDQsXG4gICAgYmxvY2tSYWRpdXMgPSAyLFxuICAgIGJsb2NrU2l6ZSA9IDEyLFxuICAgIGNvbG9yU2NoZW1lID0gdW5kZWZpbmVkLFxuICAgIGV2ZW50SGFuZGxlcnMgPSB7fSxcbiAgICBmb250U2l6ZSA9IDE0LFxuICAgIGhpZGVDb2xvckxlZ2VuZCA9IGZhbHNlLFxuICAgIGhpZGVNb250aExhYmVscyA9IGZhbHNlLFxuICAgIGhpZGVUb3RhbENvdW50ID0gZmFsc2UsXG4gICAgbGFiZWxzOiBsYWJlbHNQcm9wID0gdW5kZWZpbmVkLFxuICAgIGxvYWRpbmcgPSBmYWxzZSxcbiAgICByZW5kZXJCbG9jayA9IHVuZGVmaW5lZCxcbiAgICBzaG93V2Vla2RheUxhYmVscyA9IGZhbHNlLFxuICAgIHN0eWxlID0ge30sXG4gICAgdGhlbWU6IHRoZW1lUHJvcCA9IHVuZGVmaW5lZCxcbiAgICB0b3RhbENvdW50OiB0b3RhbENvdW50UHJvcCA9IHVuZGVmaW5lZCxcbiAgICB3ZWVrU3RhcnQgPSAwIC8vIFN1bmRheVxuICB9ID0gX3JlZjtcbiAgY29uc3QgdGhlbWUgPSBjcmVhdGVUaGVtZSh0aGVtZVByb3ApO1xuICBjb25zdCBzeXN0ZW1Db2xvclNjaGVtZSA9IHVzZUNvbG9yU2NoZW1lKCk7XG4gIGNvbnN0IGNvbG9yU2NhbGUgPSB0aGVtZVtjb2xvclNjaGVtZSAhPT0gbnVsbCAmJiBjb2xvclNjaGVtZSAhPT0gdm9pZCAwID8gY29sb3JTY2hlbWUgOiBzeXN0ZW1Db2xvclNjaGVtZV07XG4gIGNvbnN0IHVzZUFuaW1hdGlvbiA9ICF1c2VQcmVmZXJzUmVkdWNlZE1vdGlvbigpO1xuICBpZiAobG9hZGluZykge1xuICAgIGRhdGEgPSBnZW5lcmF0ZUVtcHR5RGF0YSgpO1xuICB9XG4gIGlmIChkYXRhLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHllYXIgPSBkYXRlRm5zLmdldFllYXIoZGF0ZUZucy5wYXJzZUlTTyhkYXRhWzBdPy5kYXRlKSk7XG4gIGNvbnN0IHdlZWtzID0gZ3JvdXBCeVdlZWtzKGRhdGEsIHdlZWtTdGFydCk7XG4gIGNvbnN0IGxhYmVscyA9IE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfTEFCRUxTLCBsYWJlbHNQcm9wKTtcbiAgY29uc3QgdGV4dEhlaWdodCA9IGhpZGVNb250aExhYmVscyA/IDAgOiBmb250U2l6ZSArIDIgKiBibG9ja01hcmdpbjtcbiAgZnVuY3Rpb24gZ2V0RGltZW5zaW9ucygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgd2lkdGg6IHdlZWtzLmxlbmd0aCAqIChibG9ja1NpemUgKyBibG9ja01hcmdpbikgLSBibG9ja01hcmdpbixcbiAgICAgIGhlaWdodDogdGV4dEhlaWdodCArIChibG9ja1NpemUgKyBibG9ja01hcmdpbikgKiA3IC0gYmxvY2tNYXJnaW5cbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGdldEV2ZW50SGFuZGxlcnMoYWN0aXZpdHkpIHtcbiAgICByZXR1cm4gT2JqZWN0LmtleXMoZXZlbnRIYW5kbGVycykucmVkdWNlKChoYW5kbGVycywga2V5KSA9PiAoe1xuICAgICAgLi4uaGFuZGxlcnMsXG4gICAgICBba2V5XTogZXZlbnQgPT4gZXZlbnRIYW5kbGVyc1trZXldPy4oZXZlbnQpKGFjdGl2aXR5KVxuICAgIH0pLCB7fSk7XG4gIH1cbiAgZnVuY3Rpb24gcmVuZGVyQ2FsZW5kYXIoKSB7XG4gICAgcmV0dXJuIHdlZWtzLm1hcCgod2Vlaywgd2Vla0luZGV4KSA9PiB3ZWVrLm1hcCgoYWN0aXZpdHksIGRheUluZGV4KSA9PiB7XG4gICAgICBpZiAoIWFjdGl2aXR5KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuICAgICAgY29uc3Qgc3R5bGUgPSBsb2FkaW5nICYmIHVzZUFuaW1hdGlvbiA/IHtcbiAgICAgICAgYW5pbWF0aW9uOiBgJHtzdHlsZXMubG9hZGluZ0FuaW1hdGlvbn0gMS43NXMgZWFzZS1pbi1vdXQgaW5maW5pdGVgLFxuICAgICAgICBhbmltYXRpb25EZWxheTogYCR7d2Vla0luZGV4ICogMjAgKyBkYXlJbmRleCAqIDIwfW1zYFxuICAgICAgfSA6IHVuZGVmaW5lZDtcbiAgICAgIGNvbnN0IGJsb2NrID0gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInJlY3RcIiwgX2V4dGVuZHMoe30sIGdldEV2ZW50SGFuZGxlcnMoYWN0aXZpdHkpLCB7XG4gICAgICAgIHg6IDAsXG4gICAgICAgIHk6IHRleHRIZWlnaHQgKyAoYmxvY2tTaXplICsgYmxvY2tNYXJnaW4pICogZGF5SW5kZXgsXG4gICAgICAgIHdpZHRoOiBibG9ja1NpemUsXG4gICAgICAgIGhlaWdodDogYmxvY2tTaXplLFxuICAgICAgICByeDogYmxvY2tSYWRpdXMsXG4gICAgICAgIHJ5OiBibG9ja1JhZGl1cyxcbiAgICAgICAgXCJkYXRhLWRhdGVcIjogYWN0aXZpdHkuZGF0ZSxcbiAgICAgICAgXCJkYXRhLWxldmVsXCI6IGFjdGl2aXR5LmxldmVsLFxuICAgICAgICBzdHlsZTogc3R5bGVcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCB7XG4gICAgICAgIGtleTogYWN0aXZpdHkuZGF0ZVxuICAgICAgfSwgcmVuZGVyQmxvY2sgPyByZW5kZXJCbG9jayhibG9jaywgYWN0aXZpdHkpIDogYmxvY2spO1xuICAgIH0pKS5tYXAoKHdlZWssIHgpID0+IC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJnXCIsIHtcbiAgICAgIGtleTogeCxcbiAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZSgkeyhibG9ja1NpemUgKyBibG9ja01hcmdpbikgKiB4fSwgMClgXG4gICAgfSwgd2VlaykpO1xuICB9XG4gIGZ1bmN0aW9uIHJlbmRlckZvb3RlcigpIHtcbiAgICB2YXIgX2xhYmVscyRsZWdlbmQkbGVzcywgX2xhYmVscyRsZWdlbmQkbW9yZTtcbiAgICBpZiAoaGlkZVRvdGFsQ291bnQgJiYgaGlkZUNvbG9yTGVnZW5kKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgdG90YWxDb3VudCA9IHR5cGVvZiB0b3RhbENvdW50UHJvcCA9PT0gJ251bWJlcicgPyB0b3RhbENvdW50UHJvcCA6IGRhdGEucmVkdWNlKChzdW0sIGFjdGl2aXR5KSA9PiBzdW0gKyBhY3Rpdml0eS5jb3VudCwgMCk7XG4gICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJmb290ZXJcIiwge1xuICAgICAgY2xhc3NOYW1lOiBnZXRDbGFzc05hbWUoJ2Zvb3RlcicsIHN0eWxlcy5mb290ZXIpLFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgbWFyZ2luVG9wOiAyICogYmxvY2tNYXJnaW4sXG4gICAgICAgIGZvbnRTaXplXG4gICAgICB9XG4gICAgfSwgbG9hZGluZyAmJiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIFwiXFx4QTBcIiksICFsb2FkaW5nICYmICFoaWRlVG90YWxDb3VudCAmJiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogZ2V0Q2xhc3NOYW1lKCdjb3VudCcpXG4gICAgfSwgbGFiZWxzLnRvdGFsQ291bnQgPyBsYWJlbHMudG90YWxDb3VudC5yZXBsYWNlKCd7e2NvdW50fX0nLCBTdHJpbmcodG90YWxDb3VudCkpLnJlcGxhY2UoJ3t7eWVhcn19JywgU3RyaW5nKHllYXIpKSA6IGAke3RvdGFsQ291bnR9IGFjdGl2aXRpZXMgaW4gJHt5ZWFyfWApLCAhbG9hZGluZyAmJiAhaGlkZUNvbG9yTGVnZW5kICYmIC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBnZXRDbGFzc05hbWUoJ2xlZ2VuZC1jb2xvcnMnLCBzdHlsZXMubGVnZW5kQ29sb3JzKVxuICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdF9fZGVmYXVsdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgIHN0eWxlOiB7XG4gICAgICAgIG1hcmdpblJpZ2h0OiAnMC40ZW0nXG4gICAgICB9XG4gICAgfSwgKF9sYWJlbHMkbGVnZW5kJGxlc3MgPSBsYWJlbHM/LmxlZ2VuZD8ubGVzcykgIT09IG51bGwgJiYgX2xhYmVscyRsZWdlbmQkbGVzcyAhPT0gdm9pZCAwID8gX2xhYmVscyRsZWdlbmQkbGVzcyA6ICdMZXNzJyksIEFycmF5KExFVkVMX0NPVU5UKS5maWxsKHVuZGVmaW5lZCkubWFwKChfLCBsZXZlbCkgPT4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLCB7XG4gICAgICB3aWR0aDogYmxvY2tTaXplLFxuICAgICAgaGVpZ2h0OiBibG9ja1NpemUsXG4gICAgICBrZXk6IGxldmVsXG4gICAgfSwgLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInJlY3RcIiwge1xuICAgICAgd2lkdGg6IGJsb2NrU2l6ZSxcbiAgICAgIGhlaWdodDogYmxvY2tTaXplLFxuICAgICAgZmlsbDogY29sb3JTY2FsZVtsZXZlbF0sXG4gICAgICByeDogYmxvY2tSYWRpdXMsXG4gICAgICByeTogYmxvY2tSYWRpdXNcbiAgICB9KSkpLCAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgICBzdHlsZToge1xuICAgICAgICBtYXJnaW5MZWZ0OiAnMC40ZW0nXG4gICAgICB9XG4gICAgfSwgKF9sYWJlbHMkbGVnZW5kJG1vcmUgPSBsYWJlbHM/LmxlZ2VuZD8ubW9yZSkgIT09IG51bGwgJiYgX2xhYmVscyRsZWdlbmQkbW9yZSAhPT0gdm9pZCAwID8gX2xhYmVscyRsZWdlbmQkbW9yZSA6ICdNb3JlJykpKTtcbiAgfVxuICBmdW5jdGlvbiByZW5kZXJMYWJlbHMoKSB7XG4gICAgY29uc3Qgc3R5bGUgPSB7XG4gICAgICBmb250U2l6ZVxuICAgIH07XG4gICAgaWYgKCFzaG93V2Vla2RheUxhYmVscyAmJiBoaWRlTW9udGhMYWJlbHMpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChSZWFjdF9fZGVmYXVsdC5kZWZhdWx0LkZyYWdtZW50LCBudWxsLCBzaG93V2Vla2RheUxhYmVscyAmJiAvKiNfX1BVUkVfXyovUmVhY3RfX2RlZmF1bHQuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZ1wiLCB7XG4gICAgICBjbGFzc05hbWU6IGdldENsYXNzTmFtZSgnbGVnZW5kLXdlZWtkYXknKSxcbiAgICAgIHN0eWxlOiBzdHlsZVxuICAgIH0sIHdlZWtzWzBdLm1hcCgoZGF5LCBpbmRleCkgPT4ge1xuICAgICAgaWYgKGluZGV4ICUgMiA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRheUluZGV4ID0gKGluZGV4ICsgd2Vla1N0YXJ0KSAlIDc7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInRleHRcIiwge1xuICAgICAgICB4OiAtMiAqIGJsb2NrTWFyZ2luLFxuICAgICAgICB5OiB0ZXh0SGVpZ2h0ICsgKGZvbnRTaXplIC8gMiArIGJsb2NrTWFyZ2luKSArIChibG9ja1NpemUgKyBibG9ja01hcmdpbikgKiBpbmRleCxcbiAgICAgICAgdGV4dEFuY2hvcjogXCJlbmRcIixcbiAgICAgICAga2V5OiBpbmRleFxuICAgICAgfSwgbGFiZWxzLndlZWtkYXlzID8gbGFiZWxzLndlZWtkYXlzW2RheUluZGV4XSA6IERFRkFVTFRfV0VFS0RBWV9MQUJFTFNbZGF5SW5kZXhdKTtcbiAgICB9KSksICFoaWRlTW9udGhMYWJlbHMgJiYgLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImdcIiwge1xuICAgICAgY2xhc3NOYW1lOiBnZXRDbGFzc05hbWUoJ2xlZ2VuZC1tb250aCcpLFxuICAgICAgc3R5bGU6IHN0eWxlXG4gICAgfSwgZ2V0TW9udGhMYWJlbHMod2Vla3MsIGxhYmVscy5tb250aHMpLm1hcCgoX3JlZjIsIGluZGV4LCBsYWJlbHMpID0+IHtcbiAgICAgIGxldCB7XG4gICAgICAgIHRleHQsXG4gICAgICAgIHhcbiAgICAgIH0gPSBfcmVmMjtcbiAgICAgIC8vIFNraXAgdGhlIGZpcnN0IG1vbnRoIGxhYmVsIGlmIHRoZXJlJ3Mgbm90IGVub3VnaCBzcGFjZSB0byB0aGUgbmV4dCBvbmVcbiAgICAgIGlmIChpbmRleCA9PT0gMCAmJiBsYWJlbHNbMV0gJiYgbGFiZWxzWzFdLnggLSB4IDw9IE1JTl9ESVNUQU5DRV9NT05USF9MQUJFTFMpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInRleHRcIiwge1xuICAgICAgICB4OiAoYmxvY2tTaXplICsgYmxvY2tNYXJnaW4pICogeCxcbiAgICAgICAgZG9taW5hbnRCYXNlbGluZTogXCJoYW5naW5nXCIsXG4gICAgICAgIGtleTogeFxuICAgICAgfSwgdGV4dCk7XG4gICAgfSkpKTtcbiAgfVxuICBjb25zdCB7XG4gICAgd2lkdGgsXG4gICAgaGVpZ2h0XG4gIH0gPSBnZXREaW1lbnNpb25zKCk7XG4gIGNvbnN0IGNhbGVuZGFyU3R5bGVzID0ge1xuICAgIG1heFdpZHRoOiB3aWR0aCxcbiAgICBbYC0tJHtOQU1FU1BBQ0V9LWxldmVsLTBgXTogY29sb3JTY2FsZVswXSxcbiAgICBbYC0tJHtOQU1FU1BBQ0V9LWxldmVsLTFgXTogY29sb3JTY2FsZVsxXSxcbiAgICBbYC0tJHtOQU1FU1BBQ0V9LWxldmVsLTJgXTogY29sb3JTY2FsZVsyXSxcbiAgICBbYC0tJHtOQU1FU1BBQ0V9LWxldmVsLTNgXTogY29sb3JTY2FsZVszXSxcbiAgICBbYC0tJHtOQU1FU1BBQ0V9LWxldmVsLTRgXTogY29sb3JTY2FsZVs0XSxcbiAgICAuLi4odXNlQW5pbWF0aW9uICYmIHtcbiAgICAgIFtgLS0ke05BTUVTUEFDRX0tbG9hZGluZ2BdOiBjb2xvclNjYWxlWzBdLFxuICAgICAgW2AtLSR7TkFNRVNQQUNFfS1sb2FkaW5nLWFjdGl2ZWBdOiBjb2xvclNjaGVtZSA9PT0gJ2xpZ2h0JyA/IGNocm9tYV9fZGVmYXVsdC5kZWZhdWx0KGNvbG9yU2NhbGVbMF0pLmRhcmtlbigwLjMpLmhleCgpIDogY2hyb21hX19kZWZhdWx0LmRlZmF1bHQoY29sb3JTY2FsZVswXSkuYnJpZ2h0ZW4oMC4yNSkuaGV4KClcbiAgICB9KVxuICB9O1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFydGljbGVcIiwge1xuICAgIGNsYXNzTmFtZTogYCR7TkFNRVNQQUNFfSAke3N0eWxlcy5jb250YWluZXJ9YCxcbiAgICBzdHlsZToge1xuICAgICAgLi4uc3R5bGUsXG4gICAgICAuLi5jYWxlbmRhclN0eWxlc1xuICAgIH1cbiAgfSwgLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN2Z1wiLCB7XG4gICAgd2lkdGg6IHdpZHRoLFxuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHZpZXdCb3g6IGAwIDAgJHt3aWR0aH0gJHtoZWlnaHR9YCxcbiAgICBjbGFzc05hbWU6IGdldENsYXNzTmFtZSgnY2FsZW5kYXInLCBzdHlsZXMuY2FsZW5kYXIpXG4gIH0sICFsb2FkaW5nICYmIHJlbmRlckxhYmVscygpLCByZW5kZXJDYWxlbmRhcigpKSwgcmVuZGVyRm9vdGVyKCkpO1xufTtcbmNvbnN0IFNrZWxldG9uID0gcHJvcHMgPT4gLyojX19QVVJFX18qL1JlYWN0X19kZWZhdWx0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChBY3Rpdml0eUNhbGVuZGFyLCBfZXh0ZW5kcyh7XG4gIGRhdGE6IFtdXG59LCBwcm9wcykpO1xuXG5leHBvcnRzLlNrZWxldG9uID0gU2tlbGV0b247XG5leHBvcnRzLmRlZmF1bHQgPSBBY3Rpdml0eUNhbGVuZGFyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-activity-calendar/build/index.js\n");

/***/ })

};
;